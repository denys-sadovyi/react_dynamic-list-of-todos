{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","onSelect","selectedTodo","className","map","todo","classNames","id","completed","title","type","onClick","TodoFilter","onInput","onInputApplied","onCancel","query","onChange","e","target","value","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","onX","useState","user","setUser","useEffect","userId","loadedUser","href","email","name","App","setTodos","setSelectedTodo","filterMethod","setFilterMethod","setQuery","appliedQuery","setAppliedQuery","loadedTodos","visibleTodos","filter","toLowerCase","includes","filterByTitle","method","filterByStatus","applyQuery","useCallback","f","timerId","clearTimeout","args","bebounce","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c346a66b.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\nimport { Todo } from '../../types/Todo';\n\ntype Prors = {\n  todos: Todo[];\n  onSelect: React.Dispatch<React.SetStateAction<Todo | null>>;\n  selectedTodo: Todo | null;\n};\n\nexport const TodoList: React.FC<Prors> = ({\n  todos,\n  onSelect,\n  selectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          key={todo.id}\n          data-cy=\"todo\"\n          className={classNames({\n            'has-background-info-light': selectedTodo === todo,\n          })}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          {todo.completed ? (\n            <>\n              <td className=\"is-vcentered\">\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p className=\"has-text-success\">{todo.title}</p>\n              </td>\n            </>\n          ) : (\n            <>\n              <td className=\"is-vcentered\" />\n              <td className=\"is-vcentered is-expanded\">\n                <p className=\"has-text-danger\">{todo.title}</p>\n              </td>\n            </>\n          )}\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => onSelect(todo)}\n            >\n              <span className=\"icon\">\n                {selectedTodo === todo ? (\n                  <i className=\"far fa-eye-slash\" />\n                ) : (\n                  <i className=\"far fa-eye\" />\n                )}\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","type Props = {\n  onSelect: React.Dispatch<React.SetStateAction<string>>;\n  onInput: React.Dispatch<React.SetStateAction<string>>;\n  onInputApplied: (...args: string[]) => void;\n  onCancel: React.Dispatch<React.SetStateAction<string>>;\n  query: string\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  onSelect,\n  onInput,\n  onInputApplied,\n  onCancel,\n  query,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select data-cy=\"statusSelect\" onChange={e => onSelect(e.target.value)}>\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={e => {\n          onInput(e.target.value);\n          onInputApplied(e.target.value);\n        }}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {query && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => {\n              onInput('');\n              onCancel('');\n            }}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todo: Todo,\n  onX: React.Dispatch<React.SetStateAction<Todo | null>>\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, onX }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(todo.userId).then(loadedUser => setUser(loadedUser));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {todo.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => onX(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useCallback, useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nconst filterByStatus = (todos: Todo[], method: string) => {\n  if (method === 'all') {\n    return todos;\n  }\n\n  return todos.filter(todo => (method === 'active'\n    ? !todo.completed\n    : todo.completed));\n};\n\nconst filterByTitle = (todos: Todo[], query: string) => {\n  if (query === '') {\n    return todos;\n  }\n\n  return todos.filter(\n    todo => todo.title.toLowerCase().includes(query.toLowerCase()),\n  );\n};\n\nconst bebounce = (f: React.Dispatch<React.SetStateAction<string>>, delay: number) => {\n  let timerId: number;\n\n  return (...args: string[]) => {\n    clearTimeout(timerId);\n    timerId = setTimeout(f, delay, ...args);\n  };\n};\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filterMethod, setFilterMethod] = useState('all');\n  const [query, setQuery] = useState('');\n  const [appliedQuery, setAppliedQuery] = useState('');\n\n  useEffect(() => {\n    getTodos()\n      .then(loadedTodos => setTodos(loadedTodos));\n  }, []);\n\n  const visibleTodos = filterByTitle(\n    filterByStatus(todos, filterMethod),\n    appliedQuery,\n  );\n\n  const applyQuery = useCallback(bebounce(setAppliedQuery, 1000), []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onSelect={setFilterMethod}\n                onInput={setQuery}\n                onInputApplied={applyQuery}\n                onCancel={setAppliedQuery}\n                query={query}\n              />\n            </div>\n\n            <div className=\"block\">\n              {visibleTodos.length ? (\n                <TodoList\n                  todos={visibleTodos}\n                  onSelect={setSelectedTodo}\n                  selectedTodo={selectedTodo}\n                />\n              ) : (\n                <Loader />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal todo={selectedTodo} onX={setSelectedTodo} />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}